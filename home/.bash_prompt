#!/bin/bash

#
#  Name:     rdodson41/dot-files/home/.bash_prompt
#  Author:   Richard E. Dodson <richard.elias.dodson@gmail.com>
#  Created:  Thu Oct 15 00:23:06 UTC 2015
#  License:  GNU General Public License, Version 3, 29 June 2007
#
#  Copyright (C) 2015 Richard E. Dodson <richard.elias.dodson@gmail.com>
#  
#  This file is part of dot-files.
#  
#  dot-files is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#  
#  dot-files is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#  
#  You should have received a copy of the GNU General Public License
#  along with dot-files. If not, see <http://www.gnu.org/licenses/>.
#

# Shell prompt based on the Solarized Dark theme.
# Screenshot: http://i.imgur.com/EkEtphC.png
# Heavily inspired by @necolas’s prompt: https://github.com/necolas/dotfiles
# iTerm → Profiles → Text → use 13pt Monaco with 1.1 vertical spacing.

git-prompt() {
	if git rev-parse --is-inside-work-tree &> /dev/null; then
		echo " [$(git symbolic-ref --quiet --short HEAD || git rev-parse --short HEAD || echo "unknown")]"
	fi
}

if tput setaf 1 &> /dev/null; then
	echo "true"
	tput sgr0; # reset colors
	bold=$(tput bold);
	reset=$(tput sgr0);
	# Solarized colors, taken from http://git.io/solarized-colors.
	black=$(tput setaf 0);
	blue=$(tput setaf 33);
	cyan=$(tput setaf 37);
	green=$(tput setaf 64);
	orange=$(tput setaf 166);
	purple=$(tput setaf 125);
	red=$(tput setaf 124);
	violet=$(tput setaf 61);
	white=$(tput setaf 15);
	yellow=$(tput setaf 136);
else
	echo "false"
	reset="\e[0m"
	bold="\e[1m"	
	black="\e[30m"
	red="\e[31m"
	green="\e[32m"
	yellow="\e[33m"
	blue="\e[34m"
	magenta="\e[35m"
	cyan="\e[36m"
	white="\e[37m"
	orange="\e[91m"
	violet="\e[95m"
fi

# Highlight the user name when logged in as root.
if [[ "${USER}" == "root" ]]; then
	user="${bold}${red}"
else
	user="${bold}${yellow}"
fi

# Highlight the hostname when connected via SSH.
if [[ "${SSH_TTY}" ]]; then
	host="${bold}${red}"
else
	host="${bold}${yellow}"
fi

pwd="${bold}${blue}"

git="${bold}${green}"

# Set the terminal title to the current working directory.
PS1="${user}\u${reset}@${host}\h${reset}:${pwd}\w${git}\$(git-prompt)${reset} \$ "
